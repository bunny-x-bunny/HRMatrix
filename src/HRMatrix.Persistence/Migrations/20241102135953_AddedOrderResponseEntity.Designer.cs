// <auto-generated />
using System;
using HRMatrix.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRMatrix.Persistence.Migrations
{
    [DbContext(typeof(HRMatrixDbContext))]
    [Migration("20241102135953_AddedOrderResponseEntity")]
    partial class AddedOrderResponseEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HRMatrix.Domain.Entities.Competency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Competencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Эффективная коммуникация"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Клиентоориентированность"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Умение работать в команде"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ориентация на результат"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Негативный настрой (пессимизм)"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Равнодушие"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Лицемерие"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Лидерство"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Надежность / Стабильность"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Развитие бизнеса / Партнерство"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Креативное мышление"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Стратегическое мышление"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Самоорганизация"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.CompetencyTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetencyId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.ToTable("CompetencyTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompetencyId = 1,
                            LanguageCode = "ru-RU",
                            Name = "Эффективная коммуникация"
                        },
                        new
                        {
                            Id = 2,
                            CompetencyId = 1,
                            LanguageCode = "en-US",
                            Name = "Effective Communication"
                        },
                        new
                        {
                            Id = 3,
                            CompetencyId = 1,
                            LanguageCode = "ky-KG",
                            Name = "Натыйжалуу баарлашуу"
                        },
                        new
                        {
                            Id = 4,
                            CompetencyId = 2,
                            LanguageCode = "ru-RU",
                            Name = "Клиентоориентированность"
                        },
                        new
                        {
                            Id = 5,
                            CompetencyId = 2,
                            LanguageCode = "en-US",
                            Name = "Customer Focus"
                        },
                        new
                        {
                            Id = 6,
                            CompetencyId = 2,
                            LanguageCode = "ky-KG",
                            Name = "Кардарга багытталуу"
                        },
                        new
                        {
                            Id = 7,
                            CompetencyId = 3,
                            LanguageCode = "ru-RU",
                            Name = "Умение работать в команде"
                        },
                        new
                        {
                            Id = 8,
                            CompetencyId = 3,
                            LanguageCode = "en-US",
                            Name = "Teamwork"
                        },
                        new
                        {
                            Id = 9,
                            CompetencyId = 3,
                            LanguageCode = "ky-KG",
                            Name = "Командалык иш"
                        },
                        new
                        {
                            Id = 10,
                            CompetencyId = 4,
                            LanguageCode = "ru-RU",
                            Name = "Ориентация на результат"
                        },
                        new
                        {
                            Id = 11,
                            CompetencyId = 4,
                            LanguageCode = "en-US",
                            Name = "Result Orientation"
                        },
                        new
                        {
                            Id = 12,
                            CompetencyId = 4,
                            LanguageCode = "ky-KG",
                            Name = "Жыйынтыкка багытталуу"
                        },
                        new
                        {
                            Id = 13,
                            CompetencyId = 5,
                            LanguageCode = "ru-RU",
                            Name = "Негативный настрой (пессимизм)"
                        },
                        new
                        {
                            Id = 14,
                            CompetencyId = 5,
                            LanguageCode = "en-US",
                            Name = "Negative Attitude (Pessimism)"
                        },
                        new
                        {
                            Id = 15,
                            CompetencyId = 5,
                            LanguageCode = "ky-KG",
                            Name = "Терс маанай (пессимизм)"
                        },
                        new
                        {
                            Id = 16,
                            CompetencyId = 6,
                            LanguageCode = "ru-RU",
                            Name = "Равнодушие"
                        },
                        new
                        {
                            Id = 17,
                            CompetencyId = 6,
                            LanguageCode = "en-US",
                            Name = "Indifference"
                        },
                        new
                        {
                            Id = 18,
                            CompetencyId = 6,
                            LanguageCode = "ky-KG",
                            Name = "Кайдыгерлик"
                        },
                        new
                        {
                            Id = 19,
                            CompetencyId = 7,
                            LanguageCode = "ru-RU",
                            Name = "Лицемерие"
                        },
                        new
                        {
                            Id = 20,
                            CompetencyId = 7,
                            LanguageCode = "en-US",
                            Name = "Hypocrisy"
                        },
                        new
                        {
                            Id = 21,
                            CompetencyId = 7,
                            LanguageCode = "ky-KG",
                            Name = "Экөө сүйлөөчүлүк"
                        },
                        new
                        {
                            Id = 22,
                            CompetencyId = 8,
                            LanguageCode = "ru-RU",
                            Name = "Лидерство"
                        },
                        new
                        {
                            Id = 23,
                            CompetencyId = 8,
                            LanguageCode = "en-US",
                            Name = "Leadership"
                        },
                        new
                        {
                            Id = 24,
                            CompetencyId = 8,
                            LanguageCode = "ky-KG",
                            Name = "Лидерлик"
                        },
                        new
                        {
                            Id = 25,
                            CompetencyId = 9,
                            LanguageCode = "ru-RU",
                            Name = "Надежность / Стабильность"
                        },
                        new
                        {
                            Id = 26,
                            CompetencyId = 9,
                            LanguageCode = "en-US",
                            Name = "Reliability / Stability"
                        },
                        new
                        {
                            Id = 27,
                            CompetencyId = 9,
                            LanguageCode = "ky-KG",
                            Name = "Ишенимдүүлүк / Туруктуулук"
                        },
                        new
                        {
                            Id = 28,
                            CompetencyId = 10,
                            LanguageCode = "ru-RU",
                            Name = "Развитие бизнеса / Партнерство"
                        },
                        new
                        {
                            Id = 29,
                            CompetencyId = 10,
                            LanguageCode = "en-US",
                            Name = "Business Development / Partnership"
                        },
                        new
                        {
                            Id = 30,
                            CompetencyId = 10,
                            LanguageCode = "ky-KG",
                            Name = "Бизнес өнүктүрүү / Өнөктөш"
                        },
                        new
                        {
                            Id = 31,
                            CompetencyId = 11,
                            LanguageCode = "ru-RU",
                            Name = "Креативное мышление"
                        },
                        new
                        {
                            Id = 32,
                            CompetencyId = 11,
                            LanguageCode = "en-US",
                            Name = "Creative Thinking"
                        },
                        new
                        {
                            Id = 33,
                            CompetencyId = 11,
                            LanguageCode = "ky-KG",
                            Name = "Креативдүү ой жүгүртүү"
                        },
                        new
                        {
                            Id = 34,
                            CompetencyId = 12,
                            LanguageCode = "ru-RU",
                            Name = "Стратегическое мышление"
                        },
                        new
                        {
                            Id = 35,
                            CompetencyId = 12,
                            LanguageCode = "en-US",
                            Name = "Strategic Thinking"
                        },
                        new
                        {
                            Id = 36,
                            CompetencyId = 12,
                            LanguageCode = "ky-KG",
                            Name = "Стратегиялык ой жүгүртүү"
                        },
                        new
                        {
                            Id = 37,
                            CompetencyId = 13,
                            LanguageCode = "ru-RU",
                            Name = "Самоорганизация"
                        },
                        new
                        {
                            Id = 38,
                            CompetencyId = 13,
                            LanguageCode = "en-US",
                            Name = "Self-Organization"
                        },
                        new
                        {
                            Id = 39,
                            CompetencyId = 13,
                            LanguageCode = "ky-KG",
                            Name = "Өзүн-өзү уюштуруу"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.EducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Высшее законченное (Магистр)"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Среднее специальное / профессиональное"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Кандидат наук"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Доктор наук"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Доцент"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.EducationLevelTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EducationLevelId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevelId");

                    b.ToTable("EducationLevelTranslation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EducationLevelId = 1,
                            LanguageCode = "ru-RU",
                            Name = "Высшее законченное (Магистр)"
                        },
                        new
                        {
                            Id = 2,
                            EducationLevelId = 1,
                            LanguageCode = "en-US",
                            Name = "Higher Education (Master)"
                        },
                        new
                        {
                            Id = 3,
                            EducationLevelId = 1,
                            LanguageCode = "ky-KG",
                            Name = "Жогорку билим (Магистр)"
                        },
                        new
                        {
                            Id = 4,
                            EducationLevelId = 2,
                            LanguageCode = "ru-RU",
                            Name = "Среднее специальное / профессиональное"
                        },
                        new
                        {
                            Id = 5,
                            EducationLevelId = 2,
                            LanguageCode = "en-US",
                            Name = "Specialized Secondary / Professional"
                        },
                        new
                        {
                            Id = 6,
                            EducationLevelId = 2,
                            LanguageCode = "ky-KG",
                            Name = "Орточо кесиптик билим"
                        },
                        new
                        {
                            Id = 7,
                            EducationLevelId = 3,
                            LanguageCode = "ru-RU",
                            Name = "Кандидат наук"
                        },
                        new
                        {
                            Id = 8,
                            EducationLevelId = 3,
                            LanguageCode = "en-US",
                            Name = "Candidate of Sciences"
                        },
                        new
                        {
                            Id = 9,
                            EducationLevelId = 3,
                            LanguageCode = "ky-KG",
                            Name = "Илим кандидаты"
                        },
                        new
                        {
                            Id = 10,
                            EducationLevelId = 4,
                            LanguageCode = "ru-RU",
                            Name = "Доктор наук"
                        },
                        new
                        {
                            Id = 11,
                            EducationLevelId = 4,
                            LanguageCode = "en-US",
                            Name = "Doctor of Sciences"
                        },
                        new
                        {
                            Id = 12,
                            EducationLevelId = 4,
                            LanguageCode = "ky-KG",
                            Name = "Илим доктору"
                        },
                        new
                        {
                            Id = 13,
                            EducationLevelId = 5,
                            LanguageCode = "ru-RU",
                            Name = "Доцент"
                        },
                        new
                        {
                            Id = 14,
                            EducationLevelId = 5,
                            LanguageCode = "en-US",
                            Name = "Associate Professor"
                        },
                        new
                        {
                            Id = 15,
                            EducationLevelId = 5,
                            LanguageCode = "ky-KG",
                            Name = "Ассистент профессор"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.FamilyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MarriagePeriods")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("TimesMarried")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("FamilyStatuses");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Английский"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Турецкий"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Немецкий"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Китайский"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Испанский"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Французский"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Итальянский"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Португальский"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Русский"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Японский"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Корейский"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Арабский"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Голландский"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Греческий"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Хинди"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Шведский"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Норвежский"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Датский"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Финский"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Польский"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Чешский"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Словацкий"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Украинский"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Белорусский"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Венгерский"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Румынский"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Болгарский"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Сербский"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Хорватский"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Словенский"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Литовский"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Латышский"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Эстонский"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.LanguageTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("LanguageTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageCode = "ru-RU",
                            LanguageId = 1,
                            Name = "Английский"
                        },
                        new
                        {
                            Id = 2,
                            LanguageCode = "en-US",
                            LanguageId = 1,
                            Name = "English"
                        },
                        new
                        {
                            Id = 3,
                            LanguageCode = "kg-KG",
                            LanguageId = 1,
                            Name = "Англисче"
                        },
                        new
                        {
                            Id = 4,
                            LanguageCode = "ru-RU",
                            LanguageId = 2,
                            Name = "Турецкий"
                        },
                        new
                        {
                            Id = 5,
                            LanguageCode = "en-US",
                            LanguageId = 2,
                            Name = "Turkish"
                        },
                        new
                        {
                            Id = 6,
                            LanguageCode = "kg-KG",
                            LanguageId = 2,
                            Name = "Түркчө"
                        },
                        new
                        {
                            Id = 7,
                            LanguageCode = "ru-RU",
                            LanguageId = 3,
                            Name = "Немецкий"
                        },
                        new
                        {
                            Id = 8,
                            LanguageCode = "en-US",
                            LanguageId = 3,
                            Name = "German"
                        },
                        new
                        {
                            Id = 9,
                            LanguageCode = "kg-KG",
                            LanguageId = 3,
                            Name = "Немисче"
                        },
                        new
                        {
                            Id = 10,
                            LanguageCode = "ru-RU",
                            LanguageId = 4,
                            Name = "Китайский"
                        },
                        new
                        {
                            Id = 11,
                            LanguageCode = "en-US",
                            LanguageId = 4,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = 12,
                            LanguageCode = "kg-KG",
                            LanguageId = 4,
                            Name = "Кытайча"
                        },
                        new
                        {
                            Id = 13,
                            LanguageCode = "ru-RU",
                            LanguageId = 5,
                            Name = "Испанский"
                        },
                        new
                        {
                            Id = 14,
                            LanguageCode = "en-US",
                            LanguageId = 5,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 15,
                            LanguageCode = "kg-KG",
                            LanguageId = 5,
                            Name = "Испанча"
                        },
                        new
                        {
                            Id = 16,
                            LanguageCode = "ru-RU",
                            LanguageId = 6,
                            Name = "Французский"
                        },
                        new
                        {
                            Id = 17,
                            LanguageCode = "en-US",
                            LanguageId = 6,
                            Name = "French"
                        },
                        new
                        {
                            Id = 18,
                            LanguageCode = "kg-KG",
                            LanguageId = 6,
                            Name = "Французча"
                        },
                        new
                        {
                            Id = 19,
                            LanguageCode = "ru-RU",
                            LanguageId = 7,
                            Name = "Итальянский"
                        },
                        new
                        {
                            Id = 20,
                            LanguageCode = "en-US",
                            LanguageId = 7,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 21,
                            LanguageCode = "kg-KG",
                            LanguageId = 7,
                            Name = "Итальяныча"
                        },
                        new
                        {
                            Id = 22,
                            LanguageCode = "ru-RU",
                            LanguageId = 8,
                            Name = "Португальский"
                        },
                        new
                        {
                            Id = 23,
                            LanguageCode = "en-US",
                            LanguageId = 8,
                            Name = "Portuguese"
                        },
                        new
                        {
                            Id = 24,
                            LanguageCode = "kg-KG",
                            LanguageId = 8,
                            Name = "Португалча"
                        },
                        new
                        {
                            Id = 25,
                            LanguageCode = "ru-RU",
                            LanguageId = 9,
                            Name = "Русский"
                        },
                        new
                        {
                            Id = 26,
                            LanguageCode = "en-US",
                            LanguageId = 9,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 27,
                            LanguageCode = "kg-KG",
                            LanguageId = 9,
                            Name = "Орусча"
                        },
                        new
                        {
                            Id = 28,
                            LanguageCode = "ru-RU",
                            LanguageId = 10,
                            Name = "Японский"
                        },
                        new
                        {
                            Id = 29,
                            LanguageCode = "en-US",
                            LanguageId = 10,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = 30,
                            LanguageCode = "kg-KG",
                            LanguageId = 10,
                            Name = "Жапонча"
                        },
                        new
                        {
                            Id = 31,
                            LanguageCode = "ru-RU",
                            LanguageId = 11,
                            Name = "Корейский"
                        },
                        new
                        {
                            Id = 32,
                            LanguageCode = "en-US",
                            LanguageId = 11,
                            Name = "Korean"
                        },
                        new
                        {
                            Id = 33,
                            LanguageCode = "kg-KG",
                            LanguageId = 11,
                            Name = "Кореяча"
                        },
                        new
                        {
                            Id = 34,
                            LanguageCode = "ru-RU",
                            LanguageId = 12,
                            Name = "Арабский"
                        },
                        new
                        {
                            Id = 35,
                            LanguageCode = "en-US",
                            LanguageId = 12,
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = 36,
                            LanguageCode = "kg-KG",
                            LanguageId = 12,
                            Name = "Арабча"
                        },
                        new
                        {
                            Id = 37,
                            LanguageCode = "ru-RU",
                            LanguageId = 13,
                            Name = "Голландский"
                        },
                        new
                        {
                            Id = 38,
                            LanguageCode = "en-US",
                            LanguageId = 13,
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 39,
                            LanguageCode = "kg-KG",
                            LanguageId = 13,
                            Name = "Голландча"
                        },
                        new
                        {
                            Id = 40,
                            LanguageCode = "ru-RU",
                            LanguageId = 14,
                            Name = "Греческий"
                        },
                        new
                        {
                            Id = 41,
                            LanguageCode = "en-US",
                            LanguageId = 14,
                            Name = "Greek"
                        },
                        new
                        {
                            Id = 42,
                            LanguageCode = "kg-KG",
                            LanguageId = 14,
                            Name = "Грекче"
                        },
                        new
                        {
                            Id = 43,
                            LanguageCode = "ru-RU",
                            LanguageId = 15,
                            Name = "Хинди"
                        },
                        new
                        {
                            Id = 44,
                            LanguageCode = "en-US",
                            LanguageId = 15,
                            Name = "Hindi"
                        },
                        new
                        {
                            Id = 45,
                            LanguageCode = "kg-KG",
                            LanguageId = 15,
                            Name = "Хиндиче"
                        },
                        new
                        {
                            Id = 46,
                            LanguageCode = "ru-RU",
                            LanguageId = 16,
                            Name = "Шведский"
                        },
                        new
                        {
                            Id = 47,
                            LanguageCode = "en-US",
                            LanguageId = 16,
                            Name = "Swedish"
                        },
                        new
                        {
                            Id = 48,
                            LanguageCode = "kg-KG",
                            LanguageId = 16,
                            Name = "Шведче"
                        },
                        new
                        {
                            Id = 49,
                            LanguageCode = "ru-RU",
                            LanguageId = 17,
                            Name = "Норвежский"
                        },
                        new
                        {
                            Id = 50,
                            LanguageCode = "en-US",
                            LanguageId = 17,
                            Name = "Norwegian"
                        },
                        new
                        {
                            Id = 51,
                            LanguageCode = "kg-KG",
                            LanguageId = 17,
                            Name = "Норвегче"
                        },
                        new
                        {
                            Id = 52,
                            LanguageCode = "ru-RU",
                            LanguageId = 18,
                            Name = "Датский"
                        },
                        new
                        {
                            Id = 53,
                            LanguageCode = "en-US",
                            LanguageId = 18,
                            Name = "Danish"
                        },
                        new
                        {
                            Id = 54,
                            LanguageCode = "kg-KG",
                            LanguageId = 18,
                            Name = "Данияча"
                        },
                        new
                        {
                            Id = 55,
                            LanguageCode = "ru-RU",
                            LanguageId = 19,
                            Name = "Финский"
                        },
                        new
                        {
                            Id = 56,
                            LanguageCode = "en-US",
                            LanguageId = 19,
                            Name = "Finnish"
                        },
                        new
                        {
                            Id = 57,
                            LanguageCode = "kg-KG",
                            LanguageId = 19,
                            Name = "Финче"
                        },
                        new
                        {
                            Id = 58,
                            LanguageCode = "ru-RU",
                            LanguageId = 20,
                            Name = "Польский"
                        },
                        new
                        {
                            Id = 59,
                            LanguageCode = "en-US",
                            LanguageId = 20,
                            Name = "Polish"
                        },
                        new
                        {
                            Id = 60,
                            LanguageCode = "kg-KG",
                            LanguageId = 20,
                            Name = "Полякча"
                        },
                        new
                        {
                            Id = 61,
                            LanguageCode = "ru-RU",
                            LanguageId = 21,
                            Name = "Чешский"
                        },
                        new
                        {
                            Id = 62,
                            LanguageCode = "en-US",
                            LanguageId = 21,
                            Name = "Czech"
                        },
                        new
                        {
                            Id = 63,
                            LanguageCode = "kg-KG",
                            LanguageId = 21,
                            Name = "Чехче"
                        },
                        new
                        {
                            Id = 64,
                            LanguageCode = "ru-RU",
                            LanguageId = 22,
                            Name = "Словацкий"
                        },
                        new
                        {
                            Id = 65,
                            LanguageCode = "en-US",
                            LanguageId = 22,
                            Name = "Slovak"
                        },
                        new
                        {
                            Id = 66,
                            LanguageCode = "kg-KG",
                            LanguageId = 22,
                            Name = "Словакча"
                        },
                        new
                        {
                            Id = 67,
                            LanguageCode = "ru-RU",
                            LanguageId = 23,
                            Name = "Украинский"
                        },
                        new
                        {
                            Id = 68,
                            LanguageCode = "en-US",
                            LanguageId = 23,
                            Name = "Ukrainian"
                        },
                        new
                        {
                            Id = 69,
                            LanguageCode = "kg-KG",
                            LanguageId = 23,
                            Name = "Украинча"
                        },
                        new
                        {
                            Id = 70,
                            LanguageCode = "ru-RU",
                            LanguageId = 24,
                            Name = "Белорусский"
                        },
                        new
                        {
                            Id = 71,
                            LanguageCode = "en-US",
                            LanguageId = 24,
                            Name = "Belarusian"
                        },
                        new
                        {
                            Id = 72,
                            LanguageCode = "kg-KG",
                            LanguageId = 24,
                            Name = "Белорусча"
                        },
                        new
                        {
                            Id = 73,
                            LanguageCode = "ru-RU",
                            LanguageId = 25,
                            Name = "Венгерский"
                        },
                        new
                        {
                            Id = 74,
                            LanguageCode = "en-US",
                            LanguageId = 25,
                            Name = "Hungarian"
                        },
                        new
                        {
                            Id = 75,
                            LanguageCode = "kg-KG",
                            LanguageId = 25,
                            Name = "Венгриче"
                        },
                        new
                        {
                            Id = 76,
                            LanguageCode = "ru-RU",
                            LanguageId = 26,
                            Name = "Румынский"
                        },
                        new
                        {
                            Id = 77,
                            LanguageCode = "en-US",
                            LanguageId = 26,
                            Name = "Romanian"
                        },
                        new
                        {
                            Id = 78,
                            LanguageCode = "kg-KG",
                            LanguageId = 26,
                            Name = "Румынияча"
                        },
                        new
                        {
                            Id = 79,
                            LanguageCode = "ru-RU",
                            LanguageId = 27,
                            Name = "Болгарский"
                        },
                        new
                        {
                            Id = 80,
                            LanguageCode = "en-US",
                            LanguageId = 27,
                            Name = "Bulgarian"
                        },
                        new
                        {
                            Id = 81,
                            LanguageCode = "kg-KG",
                            LanguageId = 27,
                            Name = "Болгарча"
                        },
                        new
                        {
                            Id = 82,
                            LanguageCode = "ru-RU",
                            LanguageId = 28,
                            Name = "Сербский"
                        },
                        new
                        {
                            Id = 83,
                            LanguageCode = "en-US",
                            LanguageId = 28,
                            Name = "Serbian"
                        },
                        new
                        {
                            Id = 84,
                            LanguageCode = "kg-KG",
                            LanguageId = 28,
                            Name = "Сербче"
                        },
                        new
                        {
                            Id = 85,
                            LanguageCode = "ru-RU",
                            LanguageId = 29,
                            Name = "Хорватский"
                        },
                        new
                        {
                            Id = 86,
                            LanguageCode = "en-US",
                            LanguageId = 29,
                            Name = "Croatian"
                        },
                        new
                        {
                            Id = 87,
                            LanguageCode = "kg-KG",
                            LanguageId = 29,
                            Name = "Хорватча"
                        },
                        new
                        {
                            Id = 88,
                            LanguageCode = "ru-RU",
                            LanguageId = 30,
                            Name = "Словенский"
                        },
                        new
                        {
                            Id = 89,
                            LanguageCode = "en-US",
                            LanguageId = 30,
                            Name = "Slovenian"
                        },
                        new
                        {
                            Id = 90,
                            LanguageCode = "kg-KG",
                            LanguageId = 30,
                            Name = "Словенча"
                        },
                        new
                        {
                            Id = 91,
                            LanguageCode = "ru-RU",
                            LanguageId = 31,
                            Name = "Литовский"
                        },
                        new
                        {
                            Id = 92,
                            LanguageCode = "en-US",
                            LanguageId = 31,
                            Name = "Lithuanian"
                        },
                        new
                        {
                            Id = 93,
                            LanguageCode = "kg-KG",
                            LanguageId = 31,
                            Name = "Литвача"
                        },
                        new
                        {
                            Id = 94,
                            LanguageCode = "ru-RU",
                            LanguageId = 32,
                            Name = "Латышский"
                        },
                        new
                        {
                            Id = 95,
                            LanguageCode = "en-US",
                            LanguageId = 32,
                            Name = "Latvian"
                        },
                        new
                        {
                            Id = 96,
                            LanguageCode = "kg-KG",
                            LanguageId = 32,
                            Name = "Латышча"
                        },
                        new
                        {
                            Id = 97,
                            LanguageCode = "ru-RU",
                            LanguageId = 33,
                            Name = "Эстонский"
                        },
                        new
                        {
                            Id = 98,
                            LanguageCode = "en-US",
                            LanguageId = 33,
                            Name = "Estonian"
                        },
                        new
                        {
                            Id = 99,
                            LanguageCode = "kg-KG",
                            LanguageId = 33,
                            Name = "Эстонча"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MaritalStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Женат/Замужем"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Холост/Не замужем"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Разведен(а)"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.MaritalStatusTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("MaritalStatusId");

                    b.ToTable("MaritalStatusTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageCode = "en-US",
                            MaritalStatusId = 1,
                            Name = "Married"
                        },
                        new
                        {
                            Id = 2,
                            LanguageCode = "ky-KG",
                            MaritalStatusId = 1,
                            Name = "Күйөөм (Замужем)"
                        },
                        new
                        {
                            Id = 3,
                            LanguageCode = "ru-RU",
                            MaritalStatusId = 1,
                            Name = "Женат/Замужем"
                        },
                        new
                        {
                            Id = 4,
                            LanguageCode = "en-US",
                            MaritalStatusId = 2,
                            Name = "Single"
                        },
                        new
                        {
                            Id = 5,
                            LanguageCode = "ky-KG",
                            MaritalStatusId = 2,
                            Name = "Бекар"
                        },
                        new
                        {
                            Id = 6,
                            LanguageCode = "ru-RU",
                            MaritalStatusId = 2,
                            Name = "Холост/Не замужем"
                        },
                        new
                        {
                            Id = 7,
                            LanguageCode = "en-US",
                            MaritalStatusId = 3,
                            Name = "Divorced"
                        },
                        new
                        {
                            Id = 8,
                            LanguageCode = "ky-KG",
                            MaritalStatusId = 3,
                            Name = "Ажыратылган"
                        },
                        new
                        {
                            Id = 9,
                            LanguageCode = "ru-RU",
                            MaritalStatusId = 3,
                            Name = "Разведен(а)"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedUserProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedCompletionDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserProfileId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.OrderResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderResponses");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.OrderSkill", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("OrderSkill");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "JavaScript Разработчик",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "HTML/CSS Разработчик",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "C# Разработчик",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Java Разработчик",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Специалист по данным",
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Аналитик данных",
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "Инженер машинного обучения",
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 8,
                            Name = "Исследователь ИИ",
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 9,
                            Name = "DevOps инженер",
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "Облачный инженер",
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "Swift Разработчик",
                            SpecializationId = 6
                        },
                        new
                        {
                            Id = 12,
                            Name = "Android Разработчик",
                            SpecializationId = 6
                        },
                        new
                        {
                            Id = 13,
                            Name = "Специалист по кибербезопасности",
                            SpecializationId = 7
                        },
                        new
                        {
                            Id = 14,
                            Name = "Этический хакер",
                            SpecializationId = 7
                        },
                        new
                        {
                            Id = 15,
                            Name = "Scrum-мастер",
                            SpecializationId = 8
                        },
                        new
                        {
                            Id = 16,
                            Name = "Владелец продукта",
                            SpecializationId = 8
                        },
                        new
                        {
                            Id = 17,
                            Name = "Сетевой инженер",
                            SpecializationId = 9
                        },
                        new
                        {
                            Id = 18,
                            Name = "Администратор сети",
                            SpecializationId = 9
                        },
                        new
                        {
                            Id = 19,
                            Name = "Администратор базы данных",
                            SpecializationId = 10
                        },
                        new
                        {
                            Id = 20,
                            Name = "Менеджер информационных систем",
                            SpecializationId = 10
                        },
                        new
                        {
                            Id = 21,
                            Name = "UI/UX дизайнер",
                            SpecializationId = 11
                        },
                        new
                        {
                            Id = 22,
                            Name = "Веб-дизайнер",
                            SpecializationId = 11
                        },
                        new
                        {
                            Id = 23,
                            Name = "Бизнес-аналитик",
                            SpecializationId = 12
                        },
                        new
                        {
                            Id = 24,
                            Name = "Консультант по бизнес-анализу",
                            SpecializationId = 12
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.SkillTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillTranslation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageCode = "ru-RU",
                            Name = "JavaScript Разработчик",
                            SkillId = 1
                        },
                        new
                        {
                            Id = 2,
                            LanguageCode = "en-US",
                            Name = "JavaScript Developer",
                            SkillId = 1
                        },
                        new
                        {
                            Id = 3,
                            LanguageCode = "ky-KG",
                            Name = "JavaScript иштеп чыгуучу",
                            SkillId = 1
                        },
                        new
                        {
                            Id = 4,
                            LanguageCode = "ru-RU",
                            Name = "HTML/CSS Разработчик",
                            SkillId = 2
                        },
                        new
                        {
                            Id = 5,
                            LanguageCode = "en-US",
                            Name = "HTML/CSS Developer",
                            SkillId = 2
                        },
                        new
                        {
                            Id = 6,
                            LanguageCode = "ky-KG",
                            Name = "HTML/CSS иштеп чыгуучу",
                            SkillId = 2
                        },
                        new
                        {
                            Id = 7,
                            LanguageCode = "ru-RU",
                            Name = "C# Разработчик",
                            SkillId = 3
                        },
                        new
                        {
                            Id = 8,
                            LanguageCode = "en-US",
                            Name = "C# Developer",
                            SkillId = 3
                        },
                        new
                        {
                            Id = 9,
                            LanguageCode = "ky-KG",
                            Name = "C# иштеп чыгуучу",
                            SkillId = 3
                        },
                        new
                        {
                            Id = 10,
                            LanguageCode = "ru-RU",
                            Name = "Java Разработчик",
                            SkillId = 4
                        },
                        new
                        {
                            Id = 11,
                            LanguageCode = "en-US",
                            Name = "Java Developer",
                            SkillId = 4
                        },
                        new
                        {
                            Id = 12,
                            LanguageCode = "ky-KG",
                            Name = "Java иштеп чыгуучу",
                            SkillId = 4
                        },
                        new
                        {
                            Id = 13,
                            LanguageCode = "ru-RU",
                            Name = "Специалист по данным",
                            SkillId = 5
                        },
                        new
                        {
                            Id = 14,
                            LanguageCode = "en-US",
                            Name = "Data Specialist",
                            SkillId = 5
                        },
                        new
                        {
                            Id = 15,
                            LanguageCode = "ky-KG",
                            Name = "Маалыматтар боюнча адис",
                            SkillId = 5
                        },
                        new
                        {
                            Id = 16,
                            LanguageCode = "ru-RU",
                            Name = "Аналитик данных",
                            SkillId = 6
                        },
                        new
                        {
                            Id = 17,
                            LanguageCode = "en-US",
                            Name = "Data Analyst",
                            SkillId = 6
                        },
                        new
                        {
                            Id = 18,
                            LanguageCode = "ky-KG",
                            Name = "Маалыматтар аналитиги",
                            SkillId = 6
                        },
                        new
                        {
                            Id = 19,
                            LanguageCode = "ru-RU",
                            Name = "Инженер машинного обучения",
                            SkillId = 7
                        },
                        new
                        {
                            Id = 20,
                            LanguageCode = "en-US",
                            Name = "Machine Learning Engineer",
                            SkillId = 7
                        },
                        new
                        {
                            Id = 21,
                            LanguageCode = "ky-KG",
                            Name = "Машиналык үйрөнүү инженери",
                            SkillId = 7
                        },
                        new
                        {
                            Id = 22,
                            LanguageCode = "ru-RU",
                            Name = "Исследователь ИИ",
                            SkillId = 8
                        },
                        new
                        {
                            Id = 23,
                            LanguageCode = "en-US",
                            Name = "AI Researcher",
                            SkillId = 8
                        },
                        new
                        {
                            Id = 24,
                            LanguageCode = "ky-KG",
                            Name = "ИИ изилдөөчүсү",
                            SkillId = 8
                        },
                        new
                        {
                            Id = 25,
                            LanguageCode = "ru-RU",
                            Name = "DevOps инженер",
                            SkillId = 9
                        },
                        new
                        {
                            Id = 26,
                            LanguageCode = "en-US",
                            Name = "DevOps Engineer",
                            SkillId = 9
                        },
                        new
                        {
                            Id = 27,
                            LanguageCode = "ky-KG",
                            Name = "DevOps инженери",
                            SkillId = 9
                        },
                        new
                        {
                            Id = 28,
                            LanguageCode = "ru-RU",
                            Name = "Облачный инженер",
                            SkillId = 10
                        },
                        new
                        {
                            Id = 29,
                            LanguageCode = "en-US",
                            Name = "Cloud Engineer",
                            SkillId = 10
                        },
                        new
                        {
                            Id = 30,
                            LanguageCode = "ky-KG",
                            Name = "Булут инженери",
                            SkillId = 10
                        },
                        new
                        {
                            Id = 31,
                            LanguageCode = "ru-RU",
                            Name = "Swift Разработчик",
                            SkillId = 11
                        },
                        new
                        {
                            Id = 32,
                            LanguageCode = "en-US",
                            Name = "Swift Developer",
                            SkillId = 11
                        },
                        new
                        {
                            Id = 33,
                            LanguageCode = "ky-KG",
                            Name = "Swift иштеп чыгуучу",
                            SkillId = 11
                        },
                        new
                        {
                            Id = 34,
                            LanguageCode = "ru-RU",
                            Name = "Android Разработчик",
                            SkillId = 12
                        },
                        new
                        {
                            Id = 35,
                            LanguageCode = "en-US",
                            Name = "Android Developer",
                            SkillId = 12
                        },
                        new
                        {
                            Id = 36,
                            LanguageCode = "ky-KG",
                            Name = "Android иштеп чыгуучу",
                            SkillId = 12
                        },
                        new
                        {
                            Id = 37,
                            LanguageCode = "ru-RU",
                            Name = "Специалист по кибербезопасности",
                            SkillId = 13
                        },
                        new
                        {
                            Id = 38,
                            LanguageCode = "en-US",
                            Name = "Cybersecurity Specialist",
                            SkillId = 13
                        },
                        new
                        {
                            Id = 39,
                            LanguageCode = "ky-KG",
                            Name = "Киберкоопсуздук адиси",
                            SkillId = 13
                        },
                        new
                        {
                            Id = 40,
                            LanguageCode = "ru-RU",
                            Name = "Этический хакер",
                            SkillId = 14
                        },
                        new
                        {
                            Id = 41,
                            LanguageCode = "en-US",
                            Name = "Ethical Hacker",
                            SkillId = 14
                        },
                        new
                        {
                            Id = 42,
                            LanguageCode = "ky-KG",
                            Name = "Этикалык хакер",
                            SkillId = 14
                        },
                        new
                        {
                            Id = 43,
                            LanguageCode = "ru-RU",
                            Name = "Scrum-мастер",
                            SkillId = 15
                        },
                        new
                        {
                            Id = 44,
                            LanguageCode = "en-US",
                            Name = "Scrum Master",
                            SkillId = 15
                        },
                        new
                        {
                            Id = 45,
                            LanguageCode = "ky-KG",
                            Name = "Scrum мастер",
                            SkillId = 15
                        },
                        new
                        {
                            Id = 46,
                            LanguageCode = "ru-RU",
                            Name = "Владелец продукта",
                            SkillId = 16
                        },
                        new
                        {
                            Id = 47,
                            LanguageCode = "en-US",
                            Name = "Product Owner",
                            SkillId = 16
                        },
                        new
                        {
                            Id = 48,
                            LanguageCode = "ky-KG",
                            Name = "Продукт ээси",
                            SkillId = 16
                        },
                        new
                        {
                            Id = 49,
                            LanguageCode = "ru-RU",
                            Name = "Сетевой инженер",
                            SkillId = 17
                        },
                        new
                        {
                            Id = 50,
                            LanguageCode = "en-US",
                            Name = "Network Engineer",
                            SkillId = 17
                        },
                        new
                        {
                            Id = 51,
                            LanguageCode = "ky-KG",
                            Name = "Тармак инженери",
                            SkillId = 17
                        },
                        new
                        {
                            Id = 52,
                            LanguageCode = "ru-RU",
                            Name = "Администратор сети",
                            SkillId = 18
                        },
                        new
                        {
                            Id = 53,
                            LanguageCode = "en-US",
                            Name = "Network Administrator",
                            SkillId = 18
                        },
                        new
                        {
                            Id = 54,
                            LanguageCode = "ky-KG",
                            Name = "Тармак администратору",
                            SkillId = 18
                        },
                        new
                        {
                            Id = 55,
                            LanguageCode = "ru-RU",
                            Name = "Администратор базы данных",
                            SkillId = 19
                        },
                        new
                        {
                            Id = 56,
                            LanguageCode = "en-US",
                            Name = "Database Administrator",
                            SkillId = 19
                        },
                        new
                        {
                            Id = 57,
                            LanguageCode = "ky-KG",
                            Name = "Маалыматтар базасынын администратору",
                            SkillId = 19
                        },
                        new
                        {
                            Id = 58,
                            LanguageCode = "ru-RU",
                            Name = "Менеджер информационных систем",
                            SkillId = 20
                        },
                        new
                        {
                            Id = 59,
                            LanguageCode = "en-US",
                            Name = "Information Systems Manager",
                            SkillId = 20
                        },
                        new
                        {
                            Id = 60,
                            LanguageCode = "ky-KG",
                            Name = "Маалымат системаларынын менеджери",
                            SkillId = 20
                        },
                        new
                        {
                            Id = 61,
                            LanguageCode = "ru-RU",
                            Name = "UI/UX дизайнер",
                            SkillId = 21
                        },
                        new
                        {
                            Id = 62,
                            LanguageCode = "en-US",
                            Name = "UI/UX Designer",
                            SkillId = 21
                        },
                        new
                        {
                            Id = 63,
                            LanguageCode = "ky-KG",
                            Name = "UI/UX дизайнер",
                            SkillId = 21
                        },
                        new
                        {
                            Id = 64,
                            LanguageCode = "ru-RU",
                            Name = "Веб-дизайнер",
                            SkillId = 22
                        },
                        new
                        {
                            Id = 65,
                            LanguageCode = "en-US",
                            Name = "Web Designer",
                            SkillId = 22
                        },
                        new
                        {
                            Id = 66,
                            LanguageCode = "ky-KG",
                            Name = "Веб-дизайнер",
                            SkillId = 22
                        },
                        new
                        {
                            Id = 67,
                            LanguageCode = "ru-RU",
                            Name = "Бизнес-аналитик",
                            SkillId = 23
                        },
                        new
                        {
                            Id = 68,
                            LanguageCode = "en-US",
                            Name = "Business Analyst",
                            SkillId = 23
                        },
                        new
                        {
                            Id = 69,
                            LanguageCode = "ky-KG",
                            Name = "Бизнес аналитик",
                            SkillId = 23
                        },
                        new
                        {
                            Id = 70,
                            LanguageCode = "ru-RU",
                            Name = "Консультант по бизнес-анализу",
                            SkillId = 24
                        },
                        new
                        {
                            Id = 71,
                            LanguageCode = "en-US",
                            Name = "Business Analysis Consultant",
                            SkillId = 24
                        },
                        new
                        {
                            Id = 72,
                            LanguageCode = "ky-KG",
                            Name = "Бизнес-аналитика боюнча кеңешчи",
                            SkillId = 24
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Разработка FrontEnd"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Разработка BackEnd"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Наука о данных и аналитика"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Машинное обучение и ИИ"
                        },
                        new
                        {
                            Id = 5,
                            Name = "DevOps и облачные технологии"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Мобильная разработка"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Кибербезопасность"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Управление проектами и продуктами"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Сетевые технологии и поддержка ИТ"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Управление базами данных"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Дизайн UI/UX"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Бизнес-анализ"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.SpecializationTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("SpecializationsTranslation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageCode = "ru-RU",
                            Name = "Разработка FrontEnd",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            LanguageCode = "en-US",
                            Name = "FrontEnd Development",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 3,
                            LanguageCode = "ky-KG",
                            Name = "FrontEnd иштеп чыгуу",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 4,
                            LanguageCode = "ru-RU",
                            Name = "Разработка BackEnd",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 5,
                            LanguageCode = "en-US",
                            Name = "BackEnd Development",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 6,
                            LanguageCode = "ky-KG",
                            Name = "BackEnd иштеп чыгуу",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 7,
                            LanguageCode = "ru-RU",
                            Name = "Наука о данных и аналитика",
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 8,
                            LanguageCode = "en-US",
                            Name = "Data Science and Analysis",
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 9,
                            LanguageCode = "ky-KG",
                            Name = "Маалымат илими жана аналитика",
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 10,
                            LanguageCode = "ru-RU",
                            Name = "Машинное обучение и ИИ",
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 11,
                            LanguageCode = "en-US",
                            Name = "Machine Learning and AI",
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 12,
                            LanguageCode = "ky-KG",
                            Name = "Машина үйрөнүү жана ЖИ",
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 13,
                            LanguageCode = "ru-RU",
                            Name = "DevOps и облачные технологии",
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 14,
                            LanguageCode = "en-US",
                            Name = "DevOps and Cloud Engineering",
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 15,
                            LanguageCode = "ky-KG",
                            Name = "DevOps жана булут технологиялары",
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 16,
                            LanguageCode = "ru-RU",
                            Name = "Мобильная разработка",
                            SpecializationId = 6
                        },
                        new
                        {
                            Id = 17,
                            LanguageCode = "en-US",
                            Name = "Mobile Development",
                            SpecializationId = 6
                        },
                        new
                        {
                            Id = 18,
                            LanguageCode = "ky-KG",
                            Name = "Мобилдик иштеп чыгуу",
                            SpecializationId = 6
                        },
                        new
                        {
                            Id = 19,
                            LanguageCode = "ru-RU",
                            Name = "Кибербезопасность",
                            SpecializationId = 7
                        },
                        new
                        {
                            Id = 20,
                            LanguageCode = "en-US",
                            Name = "Cybersecurity",
                            SpecializationId = 7
                        },
                        new
                        {
                            Id = 21,
                            LanguageCode = "ky-KG",
                            Name = "Киберкоопсуздук",
                            SpecializationId = 7
                        },
                        new
                        {
                            Id = 22,
                            LanguageCode = "ru-RU",
                            Name = "Управление проектами и продуктами",
                            SpecializationId = 8
                        },
                        new
                        {
                            Id = 23,
                            LanguageCode = "en-US",
                            Name = "Project and Product Management",
                            SpecializationId = 8
                        },
                        new
                        {
                            Id = 24,
                            LanguageCode = "ky-KG",
                            Name = "Долбоорлорду жана продуктуларды башкаруу",
                            SpecializationId = 8
                        },
                        new
                        {
                            Id = 25,
                            LanguageCode = "ru-RU",
                            Name = "Сетевые технологии и поддержка ИТ",
                            SpecializationId = 9
                        },
                        new
                        {
                            Id = 26,
                            LanguageCode = "en-US",
                            Name = "Networking and IT Support",
                            SpecializationId = 9
                        },
                        new
                        {
                            Id = 27,
                            LanguageCode = "ky-KG",
                            Name = "Тармактык технологиялар жана IT колдоо",
                            SpecializationId = 9
                        },
                        new
                        {
                            Id = 28,
                            LanguageCode = "ru-RU",
                            Name = "Управление базами данных",
                            SpecializationId = 10
                        },
                        new
                        {
                            Id = 29,
                            LanguageCode = "en-US",
                            Name = "Database Management",
                            SpecializationId = 10
                        },
                        new
                        {
                            Id = 30,
                            LanguageCode = "ky-KG",
                            Name = "Маалымат базасын башкаруу",
                            SpecializationId = 10
                        },
                        new
                        {
                            Id = 31,
                            LanguageCode = "ru-RU",
                            Name = "Дизайн UI/UX",
                            SpecializationId = 11
                        },
                        new
                        {
                            Id = 32,
                            LanguageCode = "en-US",
                            Name = "UI/UX Design",
                            SpecializationId = 11
                        },
                        new
                        {
                            Id = 33,
                            LanguageCode = "ky-KG",
                            Name = "UI/UX Дизайн",
                            SpecializationId = 11
                        },
                        new
                        {
                            Id = 34,
                            LanguageCode = "ru-RU",
                            Name = "Бизнес-анализ",
                            SpecializationId = 12
                        },
                        new
                        {
                            Id = 35,
                            LanguageCode = "en-US",
                            Name = "Business Analysis",
                            SpecializationId = 12
                        },
                        new
                        {
                            Id = 36,
                            LanguageCode = "ky-KG",
                            Name = "Бизнес анализ",
                            SpecializationId = 12
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AspNetUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProfilePhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VideoPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfileCompetency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetencyId")
                        .HasColumnType("int");

                    b.Property<int>("ProficiencyLevel")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileCompetencies");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfileEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EducationLevelId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevelId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileEducations");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfileLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("ProficiencyLevel")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileLanguages");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfileSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProficiencyLevel")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileSkills");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Achievements")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.WorkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("WorkTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Полная занятость"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Частичная занятость"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Фриланс"
                        });
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.WorkTypeTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("WorkTypeTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageCode = "ru-RU",
                            Name = "Полная занятость",
                            WorkTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            LanguageCode = "en-US",
                            Name = "Full-time",
                            WorkTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            LanguageCode = "ky-KG",
                            Name = "Толук жумуш убактысы",
                            WorkTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            LanguageCode = "ru-RU",
                            Name = "Частичная занятость",
                            WorkTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            LanguageCode = "en-US",
                            Name = "Part-time",
                            WorkTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            LanguageCode = "ky-KG",
                            Name = "Жарым-жартылай жумуш",
                            WorkTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            LanguageCode = "ru-RU",
                            Name = "Фриланс",
                            WorkTypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            LanguageCode = "en-US",
                            Name = "Freelance",
                            WorkTypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            LanguageCode = "ky-KG",
                            Name = "Эркин иш",
                            WorkTypeId = 3
                        });
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SuperUser",
                            NormalizedName = "SUPERUSER"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HR",
                            NormalizedName = "HR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a0b9a80e-3692-41e6-a605-1f7ea9d26e2d",
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@mail.com",
                            EmailConfirmed = false,
                            FirstName = "John",
                            LastName = "Doe",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@MAIL.COM",
                            NormalizedUserName = "USER",
                            PasswordHash = "AQAAAAIAAYagAAAAEHkD0q19JQANxm9xrwD+gHwf5nugb9XPiFUkaP7r5zt9DML1JEc9DIF2rERN0UNYOw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0867df99-3ac1-437e-b0e9-f46f42c6fa0d",
                            TwoFactorEnabled = false,
                            UserName = "user"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b8d1344c-da7f-4448-92f5-b20113cee6f5",
                            DateOfBirth = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "superuser@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Jane",
                            LastName = "Doe",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERUSER@MAIL.COM",
                            NormalizedUserName = "SUPERUSER",
                            PasswordHash = "AQAAAAIAAYagAAAAEJEATQWg3789zhUEzJanmprnTziwUG/am3Hf/4JvwDUQiOVPWnARNZgZ0eopjNxjeQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3b2d8833-c3a1-428d-9f66-b071916d6921",
                            TwoFactorEnabled = false,
                            UserName = "superuser"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34d4b8c6-c696-47f9-9151-385ce1d9efa5",
                            DateOfBirth = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hr@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Alice",
                            LastName = "Smith",
                            LockoutEnabled = false,
                            NormalizedEmail = "HR@MAIL.COM",
                            NormalizedUserName = "HR",
                            PasswordHash = "AQAAAAIAAYagAAAAEP3Bkp9rF4ys6h8/ux72pNcDFdnWmaQbrxKzf5+VlKu++fWDRa6WjhYfpcUYpeM1UA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d881ff6d-8647-4810-8355-ee0177ba1532",
                            TwoFactorEnabled = false,
                            UserName = "hr"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "090b488b-65b1-4116-a660-838d8afb6149",
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Bob",
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEGYeJR7XhOKqNt/a2+3QDwdTILeFozuxEbTIEBqVKh7XQmEPXklYM4oie6w9zSkbCw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3affd0a8-18a4-403c-a6ac-eeaa6bb3101c",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.CompetencyTranslation", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Competency", "Competency")
                        .WithMany("Translations")
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.EducationLevelTranslation", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.EducationLevel", "EducationLevel")
                        .WithMany("Translations")
                        .HasForeignKey("EducationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationLevel");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.FamilyStatus", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany("FamilyStatuses")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRMatrix.Domain.Entities.UserProfile", "UserProfile")
                        .WithOne("FamilyStatus")
                        .HasForeignKey("HRMatrix.Domain.Entities.FamilyStatus", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaritalStatus");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.LanguageTranslation", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Language", "Language")
                        .WithMany("Translations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.MaritalStatusTranslation", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany("Translations")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaritalStatus");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Order", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.UserProfile", "AssignedUserProfile")
                        .WithMany()
                        .HasForeignKey("AssignedUserProfileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AssignedUserProfile");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.OrderResponse", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.OrderSkill", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Order", "Order")
                        .WithMany("OrderSkills")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMatrix.Domain.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Skill", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Specialization", "Specialization")
                        .WithMany("Skills")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.SkillTranslation", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Skill", "Skill")
                        .WithMany("Translations")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.SpecializationTranslation", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Specialization", "Specialization")
                        .WithMany("Translations")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfileCompetency", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Competency", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMatrix.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany("UserProfileCompetencies")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfileEducation", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.EducationLevel", "EducationLevel")
                        .WithMany()
                        .HasForeignKey("EducationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMatrix.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany("UserEducations")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationLevel");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfileLanguage", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMatrix.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany("UserProfileLanguages")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfileSkill", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMatrix.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany("UserProfileSkills")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.WorkExperience", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.WorkTypeTranslation", b =>
                {
                    b.HasOne("HRMatrix.Domain.Entities.WorkType", "WorkType")
                        .WithMany("Translations")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationRoleClaim", b =>
                {
                    b.HasOne("HRMatrix.IdentityService.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUserClaim", b =>
                {
                    b.HasOne("HRMatrix.IdentityService.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUserLogin", b =>
                {
                    b.HasOne("HRMatrix.IdentityService.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("HRMatrix.IdentityService.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMatrix.IdentityService.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRMatrix.IdentityService.Models.ApplicationUserToken", b =>
                {
                    b.HasOne("HRMatrix.IdentityService.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Competency", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.EducationLevel", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Language", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.MaritalStatus", b =>
                {
                    b.Navigation("FamilyStatuses");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderSkills");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Skill", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.Specialization", b =>
                {
                    b.Navigation("Skills");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.UserProfile", b =>
                {
                    b.Navigation("FamilyStatus")
                        .IsRequired();

                    b.Navigation("UserEducations");

                    b.Navigation("UserProfileCompetencies");

                    b.Navigation("UserProfileLanguages");

                    b.Navigation("UserProfileSkills");

                    b.Navigation("WorkExperiences");
                });

            modelBuilder.Entity("HRMatrix.Domain.Entities.WorkType", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
